import{_ as g}from"./C-FXRHbH.js";import{p as m,a as f,c as r,b as n,e as w,q as y,k as b,t as v,u as o,o as l}from"./B-djkKWJ.js";import{u as k}from"./Bs-xt2-9.js";const A={class:"section-padding"},T={class:"container thinnest-content"},_={class:"mb-3"},S=["src"],D={__name:"agile-development-a-pattern-for-improvement",setup(I){const h=m(),{currentRoute:p}=h,e=f.find(s=>s.slug===p.value.fullPath.replace("/articles/",""));let a=`${e.title}`,i=`${e.summary}`,c=`Stefan, Stefan Auvache, Auvache, ${e.keywords}`,u=`www.stefanauvache.com/articles/${e.slug}`;return k({title:a,ogTitle:a,description:i,ogDescription:i,keywords:c,canonical:u}),(s,t)=>{const d=g;return l(),r("section",A,[n("div",T,[n("div",null,[n("h1",_,v(o(e).title),1),t[0]||(t[0]=n("p",{class:"tagline fst-italic blue mb-3"},"By Stefan Auvache",-1)),o(e).image!=="title.jpg"?(l(),r("img",{key:0,src:`/img/articles/${o(e).image}`,alt:"",class:"mb-3"},null,8,S)):y("",!0),t[1]||(t[1]=b('<p>In the early days of software development, projects failed in the same way over and over again. Company executives, marketing teams, and entrepreneurs would hand off a set of requirements to an engineering team, expecting the final product to match their vision. Months later, the engineers would return with something that, while technically correct, didn’t line up with the original vision. Miscommunication, subtly shifting goals, and unclear expectations created a frustrating pattern of wasted time and energy.</p><p>In 2001, a group of engineers and business leaders decided enough was enough. There simply had to be a better way. They got together and wrote the <a href="https://agilemanifesto.org/" target="_blank">Agile Manifesto</a>—a set of values for managing project complexity and customer satisfaction:</p><p>Individuals and interactions over processes and tools<br> Working software over comprehensive documentation<br> Customer collaboration over contract negotiation<br> Responding to change over following a plan</p><p>Instead of focusing on rigid contracts, plans, and processes, the group realized that engineers would be far more successful if they were flexible with requirements and in frequent contact with their clients.</p><p>The Agile Manifesto led to Agile Development—an iteration-based framework for making products. Rather than trying to get everything right the first time, engineers could build an early version, get feedback from the customer, and use what they learn to make improvements. This cycle continues until the customer is happy with the result.</p><p>Agile changed how teams build software—but its core tenets are applicable far beyond the world of software engineering.</p><h2>Agile Is a Life Skill</h2><p>Outside of code and stripped of technical jargon, Agile offers a simple framework for personal growth:</p><p>Plan. Act. Measure. Iterate.</p><p>Most people live in either the planning phase or the acting phase. They either research, strategize, and imagine their ideal version of their future without ever taking action or act without a plan and keep busy without making progress.</p><p>Agile works in both cases to help people take more informed, intentional action.</p><p>The key is iteration. Make a move, get feedback, and adjust your plans. Then do it again. You rarely get it right the first time, and you shouldn’t expect to. The point of Agile is to enable action without wasting effort. It is a cycle of learning that helps to orient future action in the right direction.</p><p>Here is a deeper look at each step.</p><h2>Plan</h2><p>Choose a direction.</p><p>Don’t get stuck trying to blueprint your entire future. Instead, define small, meaningful tasks that align with your broader goal. The point of planning isn’t perfection—it’s to guide your actions. Planning helps you avoid spinning your wheels. It gives you a starting point and a way to measure progress, even as your plans change.</p><h2>Act</h2><p>Do the work.</p><p>Action is the engine in the equation. Once you’ve identified your next move, take it. Build the prototype. Write the first draft. Go on the first run. Action creates momentum and gives you something real to evaluate.</p><h2>Measure</h2><p>Get feedback on your actions.</p><p>This is the part that most people are missing. Once you’ve acted, reflect on how things went. Pay attention to how effective and sustainable your actions are. It’s easy to check a box off the to-do list and simply move on to the next thing. But reaching a goal is only half the picture. Real progress comes when you stop and ask: Did that work? Was it worth it? Can I keep doing this long-term?</p><h2>Iterate</h2><p>Take what you have learned, make adjustments to your plans, and push forward.</p><p>This is where the magic happens. No one is a world-class performer in any field on the first try. Iteration turns mistakes into lessons and lessons into success. Each loop through the cycle—plan, act, measure—gets you a little closer to where you actually want to be. Over time, the results compound into meaningful progress.</p><h2>Agile in Action</h2><p>Suppose an amateur musician wants to support herself financially by building an audience for her music.</p><p>She thinks about hitting the road and going on tour—but instead of jumping into a multi-city lineup, she makes a plan to test the waters by playing at local open mics. That’s her next step.</p><p>Then, she takes action. She signs up, brings her guitar, and plays her songs. There’s no big marketing push, no polished merch—just her and her music.</p><p>After a few performances, she reflects. The crowds were polite, and her sets went fine, but something feels off. She realizes she doesn’t love being on stage. The part she really enjoys is the songwriting and arranging process leading up to the performance—that’s where she loses track of time.</p><p>So, she makes an adjustment. Instead of doubling down on shows, she changes her game plan. She uses the money she would have spent on touring to book studio time, record her songs, and share performance videos online.</p><p>Her plans have now changed for the better. She is more informed as to where she wants to go and how to get there. She’s still building an audience—but in a way that energizes her rather than drains her.</p><p>This process works for software engineers and musicians as well as it does for writers and entrepreneurs. Anyone taking on a project, be it self-improvement or otherwise, can use the principles of Agile Development to inform their plans, take more intentional action, and learn valuable lessons.</p><p>You don’t need to build the final version of your life before you live it.<br> You just need to move forward with intention, one iteration at a time.</p>',34))]),w(d,{slug:o(e).slug},null,8,["slug"])])])}}};export{D as default};
